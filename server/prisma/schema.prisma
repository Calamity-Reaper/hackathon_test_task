generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.VarChar(36)
  username  String   @unique @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  avatar    String?  @db.VarChar(36)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  token Token?
  roles UserRole[]

  @@map("users")
}

model Token {
  userId    String   @id @map("user_id") @db.VarChar(36)
  value     String   @db.VarChar(500)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tokens")
}

model Role {
  id          Int     @id @default(autoincrement()) @db.SmallInt
  name        String  @unique @db.VarChar(255)
  description String? @db.VarChar(255)

  users UserRole[]

  @@map("roles")
}

model UserRole {
  userId String @map("user_id") @db.VarChar(36)
  roleId Int    @map("role_id") @db.SmallInt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
  @@map("users_roles")
}
